{"version":3,"sources":["img/type1.jpg","img/type2.jpg","img/type3.jpg","barcode.js","microQR.js","barcode2.js","productqq.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Barcode","label","code","desc","mCode","cats","price","attr","type","id","className","value","size","level","renderAs","MicroQR","barcodeProps","bcid","this","props","codeType","text","scale","includetext","textxalign","bwipjs","toCanvas","e","canvasId","style","width","height","Component","Barcode2","htmlLeft","lblLeft","lblMid","lblRight","htmlMid","htmlRight","Productqq","qttInMem","onChange","min","max","event","target","valueAsNumber","App","htmlType","useState","inputKey","setInputKey","labelsUniq","setLabelsUniq","labels","setLabels","quantity","setQuantity","filename","setFilename","bcType","setBcType","bt1Active","setBt1Active","bt2Active","setBt2Active","bt3Active","setBt3Active","modalActive","setModalActive","validCode","setValidCode","errorMsgs","setErrorMsgs","updateQuantities","labelsQ","i","length","Object","assign","push","getData","data","fileInfo","lblType","csvType","Label","currencyFormat","attrPristine","Number","split","trim","toUpperCase","toFixed","row","slice","join","addAttr","getLabel","error","correctCodeFormat","name","prev","msgs","prevQuantity","prevLabels","randomString","Math","random","toString","prevInputKey","prevFilename","map","index","key","lblsLeft","lblsMid","lblsRight","lblsLen","_","hideModal","updateQqsInMem","qqs","newLabelsqq","lblsUniq","errorHandler","msg","errorMsg","test","inputId","onFileLoaded","onClick","window","print","disabled","src","imgType1","alt","imgType2","imgType3","tabIndex","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.648241d3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/type1.5261c7b9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/type2.16b3d61e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/type3.284fc72a.jpg\";","import React from \"react\";\nimport QRCode from \"qrcode.react\";\nimport \"./barcode.css\";\n\nfunction Barcode({label: {code, desc, mCode, cats, price, attr}, type, id}) {\n\n  if (type === 1) {\n    return (\n      <div className=\"type-1\">\n  <div className=\"container\">\n\n    <div className=\"top\">\n          <h2 className=\"price\">{price}</h2>\n    <p className=\"cat\">{cats}</p>\n\n    </div>\n    <div className=\"middle\">\n      <div className=\"d-attr\">\n        <p className=\"attr\">{attr}</p>\n      </div>\n          <div className=\"barcode\">\n          <QRCode\n                value={code}\n                size={100}\n                level={\"H\"}\n                renderAs={\"svg\"}\n              ></QRCode>\n          </div>\n          <div className=\"d-fa-code\">\n          <p className=\"fa-code\">{mCode}</p>\n          </div>\n    </div>\n\n    <div className=\"bottom\">\n          <p className=\"code\">{code}</p>\n    <p className=\"desc\">{desc}</p>\n    </div>\n\n  </div>\n</div>\n    );\n  } else if (type === 2) {\n    return (\n      <div className=\"type-2\">\n        <div className=\"container\">\n          <div className=\"left-side\">\n            <h2 className=\"price\">{price}</h2>\n            <p className=\"cat\">{cats}</p>\n            <p className=\"fa-code\">{mCode === '' ? '-' : mCode}</p>\n            <p className=\"desc\">{desc}</p>\n            <p className=\"attr\">{attr}</p>\n          </div>\n          <div className=\"right-side\">\n            <div className=\"barcode\">\n              <QRCode\n                value={code}\n                size={50}\n                level={\"H\"}\n                renderAs={\"svg\"}\n              ></QRCode>\n            </div>\n            <p className=\"code\">{code}</p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Barcode;\n","import React, { Component } from \"react\";\nimport bwipjs from \"bwip-js\";\n\nclass MicroQR extends Component {\n  componentDidMount() {\n    try {\n      // The return value is the canvas element\n\n      var barcodeProps = {\n        bcid: this.props.codeType, // Barcode type\n        text: this.props.value, // Text to encode\n        scale: this.props.scale, // 3x scaling factor\n        includetext: false, // Show human-readable text\n        textxalign: \"center\", // Always good to set this\n      };\n\n      let canvas = bwipjs.toCanvas(`${this.props.id}-canvas`, barcodeProps);\n      // console.log(canvas);\n    } catch (e) {\n      // `e` may be a string or Error object\n    }\n  }\n\n  render() {\n    let canvasStyle = {\n      width: '100%',\n      height: '100%'\n    };\n    let canvasId =`${this.props.id}-canvas`;\n    return <canvas id={canvasId} style={canvasStyle}></canvas>;\n  }\n}\n\nexport default MicroQR;\n","import React from \"react\";\nimport MicroQR from \"./microQR\";\nimport \"./barcode.css\";\n\nfunction Barcode2({ lblLeft, lblMid, lblRight, type, id }) {\n  let [htmlLeft, htmlMid, htmlRight] = [(<div></div>), (<div></div>), (<div></div>)];\n\n  htmlLeft = (\n    <div>\n      <h2 className=\"price\">{lblLeft.price}</h2>\n      <div className=\"barcode\">\n        <MicroQR\n          codeType={\"microqrcode\"}\n          value={lblLeft.code}\n          scale={12}\n          size={100}\n          id={`${id}-l`}\n        ></MicroQR>\n      </div>\n      <p className=\"code\">{lblLeft.code}</p>\n    </div>\n  );\n\n  if (lblMid) {\n    htmlMid = (\n      <div>\n        <h2 className=\"price\">{lblMid.price}</h2>\n        <div className=\"barcode\">\n          <MicroQR\n            codeType={\"microqrcode\"}\n            value={lblMid.code}\n            scale={12}\n            size={100}\n            id={`${id}-m`}\n          ></MicroQR>\n        </div>\n        <p className=\"code\">{lblMid.code}</p>\n      </div>\n    );\n  }\n\n  if (lblRight) {\n    htmlRight = (\n      <div>\n        <h2 className=\"price\">{lblRight.price}</h2>\n        <div className=\"barcode\">\n          <MicroQR\n            codeType={\"microqrcode\"}\n            value={lblRight.code}\n            scale={12}\n            size={100}\n            id={`${id}-r`}\n          ></MicroQR>\n        </div>\n        <p className=\"code\">{lblRight.code}</p>\n      </div>\n    );\n  }\n\n  if (type === 3) {\n    return (\n      <div className=\"type-3\">\n        <div className=\"container\">\n          {htmlLeft}\n          {htmlMid}\n          {htmlRight}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Barcode2;\n","import React from \"react\";\n\nfunction Productqq({ code, desc, attr, mCode, qttInMem, onChange }) {\n\n  return (\n    <tr>\n      <td className=\"t-code\">{code}</td>\n      <td className=\"t-desc\">{desc}</td>\n      <td className=\"t-attr\">{attr === '' ? '-' : attr}</td>\n      <td className=\"t-fa-code\">{mCode === '' ? '-' : mCode}</td>\n      <td className=\"t-quantity\">\n        <input\n          className=\"inp-quantity\"\n          type=\"number\"\n          min=\"0\"\n          max=\"999\"\n          value={qttInMem}\n          onChange={(event) => onChange(code, event.target.valueAsNumber)}\n        />\n      </td>\n    </tr>\n  );\n}\n\nexport default Productqq;\n","import React, { useState } from 'react';\nimport './App.css';\nimport './btngroup.css';\nimport './modal.css';\nimport imgType1 from './img/type1.jpg';\nimport imgType2 from './img/type2.jpg';\nimport imgType3 from './img/type3.jpg';\nimport CSVReader from 'react-csv-reader';\nimport Barcode from './barcode';\nimport Barcode2 from './barcode2';\nimport Productqq from \"./productqq\";\n\n\nfunction App() {\n\n  const [inputKey, setInputKey] = useState('22');\n\n  const [labelsUniq, setLabelsUniq] = useState([]);\n  const [labels, setLabels] = useState([]);\n  const [quantity, setQuantity] = useState(0);\n\n  const [filename, setFilename] = useState('');\n\n  const [bcType, setBcType] = useState(1);\n  const [bt1Active, setBt1Active] = useState(true);\n  const [bt2Active, setBt2Active] = useState(false);\n  const [bt3Active, setBt3Active] = useState(false);\n\n  const [modalActive, setModalActive] = useState(false);\n\n  const [validCode, setValidCode] = useState(true);\n  const [errorMsgs, setErrorMsgs] = useState([]);\n\n  const getLabel = (data, csvType) => {\n    let labels = [];\n\n    class Label {\n\n      attrPristine(attr) {\n        // Some attr are undefined, specially the ones from the migration\n        if (!attr) return '';\n        // Color: Negro => Negro\n        return attr.split(':')[1].trim().toUpperCase();\n      }\n\n      currencyFormat(price) {\n        return `S/ ${Number(price).toFixed(2)}`;\n      }\n\n      constructor(quantity, code, desc, mCode, cats, price, attr){\n        this.code = code;\n        this.desc = desc;\n        this.mCode = mCode;\n        this.cats = cats;\n        this.price = this.currencyFormat(price);\n        this.attr = this.attrPristine(attr);\n\n        // Helper property quantity in memory for modal\n        this.qttInMem = Number(quantity);\n\n        // Helper property after setting quantities\n        // this property will be 0\n        this.quantity = Number(quantity);\n      }\n\n      addAttr(attr) {\n        this.attr += ` - ${this.attrPristine(attr)}`;\n      }\n    }\n\n\n    if (csvType === 'INGRESAR') {\n      // i starts at 1 to skip the headers\n      // TEMP data.length - 1 because last row length is 1\n      for(let i=1; i<data.length-1; i++) {\n        const row = data[i];\n        /*\n        row[2] => QUANTITY\n        row[3] => CODE\n        row[4] => DESCRIPCION\n        row[5] => MANUFACTURE CODE\n        row[6] => CATEGORIES\n        row[7] => PRICE\n        row[8] => ATTRIBUTE\n        */\n      if(row.slice(0,8).join('') === '') {\n        // Get last pushed item\n        labels[labels.length-1].addAttr(row[8]);\n        } else {\n          labels.push(new Label(row[2], row[3], row[4], row[5], row[6], row[7], row[8]));\n        }\n      }\n    } else if (csvType === 'REPO-CON-ATTR') {\n      // i starts at 1 to skip the headers\n      // TEMP data.length - 1 because last row length is 1\n      for(let i=1; i<data.length-1; i++) {\n        const row = data[i];\n        /*\n        1 => QUANTITY\n        row[1] => CODE\n        row[2] => DESCRIPCION\n        row[3] => MANUFACTURE CODE\n        row[4] => CATEGORIES\n        row[5] => PRICE\n        row[6] => ATTRIBUTE\n        */\n      if(row.slice(0,6).join('') === '') {\n        // Get last pushed item\n        labels[labels.length-1].addAttr(row[6]);\n        } else {\n          labels.push(new Label(1, row[1], row[2], row[3], row[4], row[5], row[6]));\n        }\n      }\n    } else if (csvType === 'REPO-SIN-ATTR') {\n      // i starts at 1 to skip the headers\n      // TEMP data.length - 1 because last row length is 1\n      for(let i=1; i<data.length-1; i++) {\n        const row = data[i];\n        /*\n        1 => QUANTITY\n        row[1] => CODE\n        row[2] => DESCRIPCION\n        row[3] => MANUFACTURE CODE\n        row[4] => CATEGORIES\n        row[5] => PRICE\n        */\n      labels.push(new Label(1, row[1], row[2], row[3], row[4], row[5], ''));\n      }\n    }\n\n    return labels;\n  }\n\n  const updateQuantities = (labelsUniq) => {\n    let labelsQ = [];\n    for(let i = 0; i< labelsUniq.length; i++) {\n      let label = Object.assign({}, labelsUniq[i]);\n      while(label.quantity > 0) {\n        labelsQ.push(label);\n        label.quantity -= 1;\n      }\n    }\n    return labelsQ;\n  }\n\n  const getData = (data, fileInfo) => {\n\n    let lblType = ''\n    if (data[0].length === 9)\n      lblType = 'INGRESAR'\n    else if (data[0].length === 7)\n      lblType = 'REPO-CON-ATTR'\n    else if (data[0].length === 6)\n      lblType = 'REPO-SIN-ATTR'\n\n    // update labels unique\n    let labels = getLabel(data, lblType);\n\n    // check excel code format\n    const error = correctCodeFormat(labels, fileInfo.name);\n    if (!error.validCode) labels = [];\n\n    setValidCode(prev => error.validCode);\n    setErrorMsgs(prev => error.msgs);\n\n    // must be immutable\n    setLabelsUniq(labels);\n\n    // set quantities\n    let labelsQ = updateQuantities(labels);\n\n    setQuantity(prevQuantity => labelsQ.length);\n    // must be immutable\n    setLabels(prevLabels => labelsQ);\n\n    const randomString = Math.random().toString(36);\n    setInputKey(prevInputKey => randomString);\n\n    setFilename(prevFilename => fileInfo.name);\n\n  };\n\n  const setActiveB1 = () => {\n    setBt2Active(prev => false);\n    setBt3Active(prev => false);\n    setBt1Active(prev => true);\n    setBcType(prev => 1);\n  }\n\n  const setActiveB2 = () => {\n    setBt1Active(prev => false);\n    setBt3Active(prev => false);\n    setBt2Active(prev => true);\n    setBcType(prev => 2);\n  }\n\n  const setActiveB3 = () => {\n    setBt1Active(prev => false);\n    setBt2Active(prev => false);\n    setBt3Active(prev => true);\n    setBcType(prev => 3);\n  }\n\n\n  let htmlType;\n  if (bcType === 1) {\n    htmlType = (\n      <div id=\"section-to-print-type1\">\n        {labels.map((label, index) => (\n          <Barcode key={index} label={label} type={bcType} id={index}></Barcode>\n        ))}\n      </div>\n    );\n  } else if (bcType === 2) {\n    htmlType = (\n      <div id=\"section-to-print-type2\">\n        {labels.map((label, index) => (\n          <Barcode key={index} label={label} type={bcType} id={index}></Barcode>\n        ))}\n      </div>\n    );\n  } else if (bcType === 3) {\n    // TO COMPLETE A LABEL\n    // [qr] | null | null -> [qr] | [] | []\n    let [lblsLeft, lblsMid, lblsRight] = [[], [], []];\n    const lblsLen = labels.length; // OPTIMIZING ?\n    for (let i = 0; i < lblsLen; i += 3) {\n      lblsLeft.push(labels[i]);\n      lblsMid.push(i+1 < lblsLen ? labels[i+1] : null);\n      lblsRight.push(i+2 < lblsLen ? labels[i+2] : null);\n    }\n\n    htmlType = (\n      <div id=\"section-to-print-type2\">\n        {lblsLeft.map((_, i) => (\n          <Barcode2\n            key={i}\n            lblLeft={lblsLeft[i]}\n            lblMid={lblsMid[i]}\n            lblRight={lblsRight[i]}\n            type={bcType}\n            id={i}\n          ></Barcode2>\n        ))}\n      </div>\n    );\n  }\n\n  const showModal = () => {\n    setModalActive(prev => true);\n  };\n  const hideModal = () => {\n    setModalActive(prev => false);\n  };\n\n  const updateQqsInMem = (code, qqs) => {\n    let newLabelsqq = labelsUniq.map(label => {\n      // min value 0\n      // max value 999\n      if(!qqs) qqs = 0;\n      if(qqs >= 999) qqs = 999;\n      if(label.code === code) label.qttInMem = qqs;\n      return label;\n    });\n    setLabelsUniq(prev => newLabelsqq);\n  };\n\n  const cancelQqs = () => {\n    hideModal();\n    let newLabelsqq = labelsUniq.map(label => {\n      label.qttInMem = label.quantity;\n      return label;\n    });\n    setLabelsUniq(prev => newLabelsqq);\n  };\n\n  const confirmQqs = () => {\n    hideModal();\n    let newLabelsqq = labelsUniq.map(label => {\n      label.quantity = label.qttInMem;\n      return label;\n    });\n    setLabelsUniq(prev => newLabelsqq);\n\n    // set quantities\n    let labelsQ = updateQuantities(newLabelsqq);\n    setQuantity(prevQuantity => labelsQ.length);\n    // must be immutable\n    setLabels(prevLabels => labelsQ);\n  };\n\n  const correctCodeFormat = (lblsUniq, filename) => {\n    let errorHandler = {\n      validCode: true,\n      msgs: []\n    };\n\n    let msg = {\n      code: '',\n      desc: '',\n      error: ''\n    };\n\n    if (filename === '') return errorHandler;\n\n    for(let i=0; i < lblsUniq.length; i++) {\n      msg = {\n        code: lblsUniq[i].code,\n        desc: lblsUniq[i].desc,\n        error: '-'\n      };\n      let errorMsg = [];\n      let validCode = true;\n\n      // excel error code is 4.55395E+12\n      if(/\\d\\.\\d{5}E\\+12/.test(lblsUniq[i].code)) {\n        errorHandler.validCode = false;\n        validCode = false;\n        msg.code = lblsUniq[i].code;\n        errorMsg.push('código xlsx')\n      }\n      // odoo error code is empty ''\n      if(lblsUniq[i].code === '') {\n        errorHandler.validCode = false;\n        validCode = false;\n        msg.code = '';\n        errorMsg.push('código vacío')\n      }\n      // odoo error desc is empty ''\n      if(lblsUniq[i].desc === '') {\n        errorHandler.validCode = false;\n        validCode = false;\n        msg.desc = '';\n        errorMsg.push('desc vacío')\n      }\n\n      if(!validCode) {\n        msg.error = errorMsg.join(' - ');\n        errorHandler.msgs.push(msg);\n      }\n    }\n\n    return errorHandler;\n  }\n\n  const closeErrorModal = () => {\n    setValidCode(prev => true);\n    setErrorMsgs(prev => []);\n  }\n\n  return (\n    <div>\n      <div className=\"top-header\">\n        <div className=\"header\">\n          <div className=\"col-1\">\n            {/* btn CHOOSE FILE */}\n            <div key={inputKey} className=\"file-container\">\n              <CSVReader\n                inputId=\"file-upload\"\n                onFileLoaded={(data, fileInfo) => getData(data, fileInfo)}\n              />\n              <div className=\"mask\">{filename}</div>\n            </div>\n\n            {/* btn PRINT */}\n            <div id=\"no-print\">\n              <button onClick={() => window.print()}>PRINT</button>\n            </div>\n\n            {/* btn QUANTITIES */}\n            <button\n              className=\"btn-modal\"\n              onClick={showModal}\n              disabled={filename === \"\" ? true : false}\n            >\n              Cantidades\n            </button>\n          </div>\n          <div className=\"col-2\">\n            <div className=\"btn-group\">\n              <button\n                className={bt1Active ? \"btn-bctype active\" : \"btn-bctype\"}\n                onClick={setActiveB1}\n              >\n                <img src={imgType1} alt=\"\" />\n              </button>\n              <button\n                className={bt2Active ? \"btn-bctype active\" : \"btn-bctype\"}\n                onClick={setActiveB2}\n              >\n                <img src={imgType2} alt=\"\" />\n              </button>\n              <button\n                className={bt3Active ? \"btn-bctype active\" : \"btn-bctype\"}\n                onClick={setActiveB3}\n              >\n                <img src={imgType3} alt=\"\" />\n              </button>\n            </div>\n          </div>\n        </div>\n        <h1 className=\"lbl-total\">Etiquetas: {quantity}</h1>\n      </div>\n      {htmlType}\n\n      {/* modal html */}\n      <div\n        className={modalActive ? \"modal display-block\" : \"modal display-none\"}\n      >\n        <section className=\"modal-qq\">\n          <div className=\"t-top\">\n            <button className=\"close-modal\" tabIndex=\"-1\" onClick={cancelQqs}>\n              &times;\n            </button>\n          </div>\n          <table className=\"t-lbls\">\n            <thead>\n              <tr>\n                <th className=\"t-code\">Código</th>\n                <th className=\"t-desc\">Descripción</th>\n                <th className=\"t-attr\">Attr</th>\n                <th className=\"t-fa-code\">C. Fab</th>\n                <th className=\"t-quantity\">Cantidad</th>\n              </tr>\n            </thead>\n            <tbody>\n              {labelsUniq.map((label, i) => (\n                <Productqq\n                  code={label.code}\n                  desc={label.desc}\n                  attr={label.attr}\n                  mCode={label.mCode}\n                  qttInMem={label.qttInMem}\n                  onChange={updateQqsInMem}\n                  key={i}\n                />\n              ))}\n            </tbody>\n          </table>\n          <div className=\"bottom-btns\">\n            <button className=\"btn btn-success\" onClick={confirmQqs}>\n              Aceptar\n            </button>\n          </div>\n        </section>\n      </div>\n\n      {/* modal error */}\n      <div className={validCode ? \"modal display-none\" : \"modal display-block\"}>\n        <div className=\"modal-error\">\n          <p className=\"text-error\">ERROR</p>\n          <table className=\"t-error\">\n            <thead>\n                <tr>\n                  <th>Código</th>\n                  <th>Descripción</th>\n                  <th>Error</th>\n                </tr>\n            </thead>\n            <tbody>\n                {\n                  errorMsgs.map((msg, i) => (\n                    <tr key={i}>\n                      <td>{msg.code}</td>\n                      <td>{msg.desc}</td>\n                      <td>{msg.error}</td>\n                    </tr>\n                  ))\n                }\n            </tbody>\n          </table>\n          <div className=\"bottom-btns\">\n            <button className=\"btn btn-danger\" onClick={closeErrorModal}>\n              Aceptar\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}